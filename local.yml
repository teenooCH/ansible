- hosts: all
  gather_facts: yes
  become: false
  vars_files:
    - vars.yml
  pre_tasks:
    - name: set global vars
      set_fact:
        all_brew_pkgs: []
        all_cask_pkgs: []
      tags: always

    - name: update repositories
      tags: always
      homebrew:
        update_homebrew: yes
      changed_when: false

  tasks:
    - name: add base pkgs
      set_fact:
        all_brew_pkgs: "{{ all_brew_pkgs + base_brew_pkgs }}"
        all_cask_pkgs: "{{ all_cask_pkgs + base_cask_pkgs }}"
      tags: always

    - name: add optional brew packages
      tags: never, full
      block:
      - name: add development pkgs
        set_fact:
          all_brew_pkgs: "{{ all_brew_pkgs + devel_brew_pkgs }}"
          all_cask_pkgs: "{{ all_cask_pkgs + devel_cask_pkgs }}"
        tags: devel

      - name: add office pkgs
        set_fact:
          all_brew_pkgs: "{{ all_brew_pkgs + office_brew_pkgs }}"
          all_cask_pkgs: "{{ all_cask_pkgs + office_cask_pkgs }}"
        tags: office

      - name: add security pkgs
        set_fact:
          all_brew_pkgs: "{{ all_brew_pkgs + security_brew_pkgs }}"
          all_cask_pkgs: "{{ all_cask_pkgs + security_cask_pkgs }}"
        tags: security

      - name: add virtualization pkgs
        set_fact:
          all_brew_pkgs: "{{ all_brew_pkgs + v12n_brew_pkgs }}"
          all_cask_pkgs: "{{ all_cask_pkgs + v12n_cask_pkgs }}"
        tags: v12n

    - name: Install Homebrew packages
      homebrew:
        name: "{{ item }}"
      with_items: "{{ all_brew_pkgs }}"
      tags: always

    - name: Install Homebrew cask packages
      homebrew_cask:
        name: "{{ item }}"
        accept_external_apps: true
      with_items: "{{ all_cask_pkgs }}"
      tags: always

    - name: Get all installed Apps
      command: mas list
      register: installed_apps
      check_mode: false
      changed_when: false
      tags: always

    - name: Ensure configured MAS apps are installed.
      command: mas install "{{ item.id | default(item) }}"
      with_items: "{{ mas_installed_apps }}"
      when: (item.id | default(item) | string) not in installed_apps.stdout
      tags: always

    - name: Clone Oh My ZSH repository
      git:
        repo: "{{ omz_repository }}"
        dest: "{{ omz_directory }}"
        depth: 1
        update: no
        version: "master"
      tags: always

    - name: Clone Powerlevel10k repository
      git:
        repo: "{{ p10k_repository }}"
        dest: "{{ p10k_directory }}"
        depth: 1
        update: no
        version: "master"
      tags: always

    - name: Write .zshrc
      template:
        src: "zshrc.j2"
        dest: "~/.zshrc"
        backup: yes
        mode: "0640"
